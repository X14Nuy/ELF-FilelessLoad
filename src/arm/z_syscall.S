    .text
    .globl z_syscall
    .type z_syscall,%function

z_syscall:
    /* 保存 ABI 需要保存的寄存器 */
    push    {r4-r11, lr}       /* 保存 r4-r7 和返回地址 lr */

    /* 参数1-4在R0-R3中，剩下的参数从右往左依次入栈 */
    /* 由于压入了r4-r7和lr，第5个参数在esp上方20字节的位置 */
    /* r0存放syscall num，r1-r3分别存放参数1-3，esp+20指向参数4，+24指向参数5，+28指向参数6 */
	mov		r7, r0				/* 将调用号给r7 */
	mov		r0, r1				/* 第1个参数给r0 */
	mov		r1, r2				/* 第2个参数给r1 */
	mov		r2, r3				/* 第3个参数给r2 */
    ldr		r3, [sp, #36]		/* 第4个参数从栈中取出给到r3 */
    ldr		r4, [sp, #40]		/* 第5个参数从栈中取出给到r4 */
    ldr		r5, [sp, #44]		/* 第6个参数从栈中取出给到r5 */
	
    /* 执行系统调用 */
    swi     0                 /* 执行软件中断来触发系统调用 */

    /* 恢复寄存器 */
    pop     {r4-r11, pc}       /* 恢复 r4-r7 和程序计数器 (pc)，从 lr 返回 */